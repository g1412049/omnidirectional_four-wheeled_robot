<?xml version="1.0"?>
<!-- ===========================================================================  -->
<!-- |    ommidirecctional_four-wheeled_robot.urdf.xacro												| -->
<!-- |    author: Koji Shibata                               										| -->
<!-- |    e-mail: kshibata.0519@gmail.com																				| -->
<!-- |    This is a URDF file that describes an omnidirectional 								| -->
<!-- |    four-wheeled robot for ROS users.																			| -->
<!-- ===========================================================================  -->
<robot name="omnidirectional_four-wheeled_robot" xmlns:xacro="http://ros.org/wiki/xacro">
<xacro:property name="x_size" value="0.75"/>
<xacro:property name="y_size" value="0.75"/>
<xacro:property name="z_size" value="0.25"/>
<xacro:property name="body_mass" value="1."/>
<xacro:property name="cylinder_radius" value="0.2"/>
<xacro:property name="cylinder_length" value="0.1"/>
<xacro:property name="wheel_mass" value="0.5"/>
<xacro:property name="effort_limit" value="1."/>
<xacro:property name="velocity_limit" value="5."/>
<xacro:property name="control_period" value="0.001"/>

<xacro:include filename="$(find omnidirectional_four-wheeled_robot)/urdf/wheel.urdf.xacro"/>
<xacro:include filename="$(find omnidirectional_four-wheeled_robot)/urdf/camera.urdf.xacro"/>
<xacro:include filename="$(find omnidirectional_four-wheeled_robot)/urdf/laser.urdf.xacro"/>

	<link name="base_link"/>
	<link name="body_link">
		<visual>
			<geometry>
				<box size="${x_size} ${y_size} ${z_size}"/>
			</geometry>
			<material name="White">
				<color rgba="1. 1. 1. 1."/>
			</material>
		</visual>

		<collision>
			<geometry>
				<box size="${x_size} ${y_size} ${z_size}"/>
			</geometry>
		</collision>

		<inertial>
			<origin xyz="0. 0. 0."/>
			<mass value="${body_mass}"/>
			<inertia ixx="${body_mass * (y_size**2 + z_size**2) / 12}" ixy="0." ixz="0."
					  iyy="${body_mass * (x_size**2 + z_size**2) / 12}" iyz="0."
					  izz="${body_mass * (x_size**2 + y_size**2) / 12}"/>
		</inertial>
	</link>

	<link name="frontPoint_link">
		<visual>
			<geometry>
				<box size="0.05 0.05 0.05"/>
			</geometry>
			<material name="Red">
				<color rgba="1. 0. 0. 1."/>
			</material>
		</visual>

		<collision>
			<geometry>
				<box size="0.05 0.05 0.05"/>
			</geometry>
		</collision>

		<inertial>
			<origin xyz="0. 0. 0."/>
			<mass value="0."/>
			<inertia ixx="0." ixy="0." ixz="0." iyy="0." iyz="0." izz="0."/>
		</inertial>
	</link>

	<joint name="base_joint" type="fixed">
		<origin xyz="0. 0. 0.3" rpy="0. 0. 0."/>
		<parent link="base_link"/>
		<child link="body_link"/>
		<calibration rising="0."/>
		<dynamics damping="0." friction="0."/>
	</joint>

	<joint name="frontPoint_joint" type="fixed">
		<origin xyz="${x_size/2 - 0.02} 0. ${z_size/2 - 0.02}" rpy="0. 0. 0."/>
		<parent link="body_link"/>
		<child link="frontPoint_link"/>
	</joint>

	<xacro:wheel_macro suffix="FRwheel" parent="body_link" x_pos="0.375"  y_pos="0.375"/>
	<xacro:wheel_macro suffix="RRwheel" parent="body_link" x_pos="0.375"  y_pos="-0.375"/>
	<xacro:wheel_macro suffix="FLwheel" parent="body_link" x_pos="-0.375" y_pos="0.375"/>
	<xacro:wheel_macro suffix="RLwheel" parent="body_link" x_pos="-0.375" y_pos="-0.375"/>
	<xacro:camera_macro prefix="camera" parent="body_link" xyz="${x_size/2} 0. ${z_size/2}"/>
	<!-- <xacro:laser_macro prefix="FrontLaser" parent="body_link" xyz="${x_size/4} 0. ${z_size/2 + 1.e-2}" rpy="0. 0. 0."/>
	<xacro:laser_macro prefix="RearLaser" parent="body_link" xyz="${-x_size/4} 0. ${z_size/2 + 1.e-2}" rpy="0. 0. ${-pi}"/> -->

	<gazebo reference="base_link">
		<selfCollide>false</selfCollide>
		<mu1 value="0.05"/>
		<mu2 value="0.05"/>
	</gazebo>

	<gazebo reference="frontPoint_link">
		<selfCollide>false</selfCollide>
		<material>Gazebo/Red</material>
	</gazebo>

	<gazebo>
		<plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
			<controlPeriod>${control_period}</controlPeriod>
			<legacyModeNS>true</legacyModeNS>
			<robotParam>/robot_description</robotParam>
			<robotNamespace>/omnidirectional_four_wheeled_robot</robotNamespace>
			<robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
		</plugin>
		<plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
			<alwaysOn>true</alwaysOn>
			<bodyName>body_link</bodyName>
			<topicName>/omnidirectional_four_wheeled_robot/imu</topicName>
			<serviceName>imu_service</serviceName>
			<gaussianNoise>1.e-3</gaussianNoise>
			<updateRate>50.</updateRate>
		</plugin>
	</gazebo>
</robot>
